#######################################################################################
##			 honeybrid REDIRECTION TABLE				#######
##			##############################				#######
## pattern is <LIH IP>:<LIH PORT> -> <HIH IP>:<HIH PORT> : <equation>		#######
#######################################################################################
# example : smtp redirection
#  lih_ip:port -> hih_ip:port : equation
#  192.168.0.234:25 -> 192.168.0.209:25 : counter(2)
#

192.168.5.32:135 -> 192.168.5.104:135 : yesno(yes)
192.168.5.32:139 -> 192.168.5.104:139 : yesno(yes)
192.168.5.32:445 -> 192.168.5.104:445 : yesno(yes)
192.168.5.32:1025 -> 192.168.5.104:1025 : yesno(yes)

192.168.5.33:135 -> 192.168.5.104:135 : counter(2)
192.168.5.33:139 -> 192.168.5.104:139 : counter(2)
192.168.5.33:445 -> 192.168.5.104:445 : counter(2)
192.168.5.33:1025 -> 192.168.5.104:1025 : counter(2)

192.168.5.34:135 -> 192.168.5.104:135 : counter(3)
192.168.5.34:139 -> 192.168.5.104:139 : counter(3)
192.168.5.34:445 -> 192.168.5.104:445 : counter(3)
192.168.5.34:1025 -> 192.168.5.104:1025 : counter(3)

192.168.5.40:135 -> 192.168.5.104:135 : hash(bdd1)
192.168.5.40:139 -> 192.168.5.104:139 : hash(bdd1)
192.168.5.40:445 -> 192.168.5.104:445 : hash(bdd1)
192.168.5.40:1025 -> 192.168.5.104:1025 : hash(bdd1)

192.168.5.41:135 -> 192.168.5.104:135 : hash(bdd1)
192.168.5.41:139 -> 192.168.5.104:139 : hash(bdd1)
192.168.5.41:445 -> 192.168.5.104:445 : hash(bdd1)
192.168.5.41:1025 -> 192.168.5.104:1025 : hash(bdd1)

#*# ## New Rule Syntax Proposal (2009-06-17)
#*# 
#*# # First, we define our instruments:
#*#  * honeypots: "<IP Host/Network address> + <service>" + "unique identifier"
#*# 
#*# # Second, we define our networks:
#*#  * network: "<IP Host/Network address>" + "unique identifier"
#*# 
#*# # Third, we define the relationship between the networks and the intruments:
#*#  * decision module: "<module id> + <parameters>"
#*#  * link: "<network id> + <honeypot id>" + "decision rule"
#*# 
#*# # Finally, we define the outbound control of honeypots:
#*#  * control: "<honeypot id>" + "control rule"
#*# 
#*# ## One liner proposal:
#*# <Module identifier> {
#*# 	parameter:value;
#*# }
#*# <Target IP Host/Network address>:<port/port range/port list> { 
#*# 	<Instrument IP Host/Network address>:<port, optional> = <equation using module identifier> ;
#*# 	<control equation> ;
#*# }
#*# 
#*# ## Internals:
#*# During initialization:
#*#  - read list of target IP to know what is EXTERNAL and what is INTERNAL (targeted honeynet)
#*#  - read list of module identifiers and parameters
#*# 
#*# A new packet is received:
#*#  - determine if it's EXTERNAL, or INTERNAL, or part of a processed connection
#*# 
#*# When processing connection (proxy, redirection)
#*#  - update list of instrumented IP/port in use, in order to decide how to correctly handle packets from them
#*# 
#*# ## Problem:
#*#  * Define per TARGET IP, or per TARGET SERVICE?

#*# # Final Proposal:
#*#  module "identifier" {
#*#    parameter= value;
#*#  }
#*# 
#*#  target 10.0.0.0/16:22,80 {
#*#    frontend 192.168.0.16/30:80 "accept rule defined by an equation of module identifiers"	# will potentially use a NAT engine to proxy
#*#    backend 192.168.0.200:80 "accept rule defined by an equation of module identifiers" # will use a REDIRECTION engine
#*#    control "control rule defined by an equation of module identifiers"
#*#  }
#*# 
#*# # Implicit rules:
#*#  - IP can be defined as single host or full subnet using an optional network mask
#*#  - If a subnet address is given for the frontend or the backend, then honeypot will be cycled (sequentially / randomly ? -> defined by configuration file) or the honeypot IP will try to match the targeted IP, using the difference between netmasks as modulo
#*#  - For frontend and backend, if the port is omitted, it will use by default the port targeted
#*#  - For frontend and backend, if the port is different, it will automatically translate the port
#*#  - For target, ports can be optional (default behavior for all ports), or given as single port, port list or port range (nmap fashion)
#*#  - For frontend, accept rule can be omitted (will accept everything)
#*#  - For frontend, IP can be omitted (will use the target IP. Will NAT otherwise to proxy)
#*#  - Backend can be omitted (will never redirect)
#*#  - Control can be omitted (will allow everything)
